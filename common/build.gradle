architectury {
    common rootProject.enabled_platforms.split(',')
}

repositories{
    if (project.create_enabled as int == 1) {
        maven { url = "https://mvn.devos.one/snapshots/" } // Create Fabric
        maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
        maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
    }
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"
    if (project.create_enabled as int == 1) {
        // Compile against Create Fabric in common
        // beware of differences across platforms!
        // dependencies must also be pulled in to minimize problems, from remapping issues to compile errors.
        // All dependencies except Flywheel and Registrate are NOT safe to use!
        // Flywheel and Registrate must also be used carefully due to differences.
        modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric_version}")
    }
}
loom {
    accessWidenerPath = file("src/main/resources/flowing_fluids_${project.mc_build}.accesswidener")
}